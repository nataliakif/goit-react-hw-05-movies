{"version":3,"file":"static/js/677.01d418f4.chunk.js","mappings":"yMACA,GAAgB,QAAU,4BAA4B,aAAe,iCAAiC,WAAa,+BAA+B,kBAAoB,sCAAsC,iBAAmB,sC,oCCIhN,SAASA,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,MAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA0BC,EAAAA,EAAAA,MAAnBC,GAAP,eACQC,GAAWC,EAAAA,EAAAA,MAAXD,OA0BR,OAZAE,QAAQC,IAAIH,IAEZI,EAAAA,EAAAA,YAAU,WACHJ,IAGLK,EAAAA,EAAAA,IAAiBL,EAAOM,MAAM,IAAIC,MAAK,SAAAC,GACrCN,QAAQC,IAAIK,EAASC,SACrBZ,EAAUW,EAASC,cAEpB,CAACT,IACJE,QAAQC,IAAIP,IAEV,iBAAKc,UAAWC,EAAAA,QAAhB,WACE,kBAAMC,SAvBW,SAAAC,GACnBA,EAAEC,iBACmB,KAAjBpB,EAAMqB,QAIVhB,EAAgB,SAAD,OAAUL,EAAMqB,OAAOC,iBACtCX,EAAAA,EAAAA,IAAiBX,EAAMqB,OAAOC,eAAeT,KAAKV,IAJhDK,QAAQC,IAAI,2BAoBkBO,UAAWC,EAAAA,WAAzC,WACE,kBACED,UAAWC,EAAAA,iBACXM,KAAK,OACLC,KAAK,QACLC,SA/BkB,SAAAN,GACxBlB,EAASkB,EAAEO,cAAcC,QA+BnBA,MAAO3B,EACP4B,aAAa,MACbC,WAAS,EACTC,YAAY,qBAEd,mBAAQP,KAAK,SAASP,UAAWC,EAAAA,kBAAjC,UACE,kBAAOD,UAAWC,EAAAA,iBAAlB,yBAIHf,GAAUA,EAAO6B,OAAS,IACzB,+BACE,eAAIf,UAAWC,EAAAA,aAAf,SACGf,EAAO8B,KACN,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACEA,IACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAArB,SAA4BC,KADrBD,e,oLC3DrBG,EAAW,gCACXC,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,UACQ1B,EADR,OAEEN,QAAQC,IAAIK,IACLA,EAAS4B,GAHlB,iCAIY5B,EAAS6B,OAJrB,gDAKMC,QAAQC,OAAO,IAAIC,MAAM,cAL/B,2GAQA,SAASnC,EAAiBX,GACxB,OAAOsC,EAAuB,GAAD,OACxBF,EADwB,gCACQC,EADR,kBACyBrC,IAGxD,SAAS+C,IACP,OAAOT,EAAuB,GAAD,OACxBF,EADwB,oCACYC,IAG3C,SAASW,EAAgBf,GACvB,OAAOK,EAAuB,GAAD,OAAIF,EAAJ,iBAAqBH,EAArB,oBAAmCI,IAElE,SAASY,EAAgBhB,GACvB,OAAOK,EAAuB,GAAD,OACxBF,EADwB,kBACNH,EADM,4BACgBI,IAG/C,SAASa,EAAgBjB,GACvB,OAAOK,EAAuB,GAAD,OACxBF,EADwB,kBACNH,EADM,4BACgBI","sources":["webpack://react-homework-template/./src/components/views/MoviesView/MoviesView.module.css?eda0","components/views/MoviesView/MoviesView.jsx","services/api-service.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MoviesView_content__ep1BM\",\"movies__list\":\"MoviesView_movies__list__9Yf3M\",\"SearchForm\":\"MoviesView_SearchForm__yQ-+S\",\"SearchForm_button\":\"MoviesView_SearchForm_button__QMv98\",\"SearchForm_input\":\"MoviesView_SearchForm_input__PY-8d\"};","import { useState, useEffect } from 'react';\nimport styles from './MoviesView.module.css';\nimport { getBySearchQuery } from '../../../services/api-service';\nimport { useSearchParams, useLocation, Link } from 'react-router-dom';\n\nexport default function MoviesView() {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState(null);\n  let [, setSearchParams] = useSearchParams();\n  const { search } = useLocation();\n\n  const handleInputChange = e => {\n    setQuery(e.currentTarget.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      console.log('Type your search query');\n      return;\n    }\n    setSearchParams(`query=${query.trim().toLowerCase()}`);\n    getBySearchQuery(query.trim().toLowerCase()).then(setMovies);\n  };\n  console.log(search);\n\n  useEffect(() => {\n    if (!search) {\n      return;\n    }\n    getBySearchQuery(search.slice(7)).then(response => {\n      console.log(response.results);\n      setMovies(response.results);\n    });\n  }, [search]);\n  console.log(movies);\n  return (\n    <div className={styles.content}>\n      <form onSubmit={handleSubmit} className={styles.SearchForm}>\n        <input\n          className={styles.SearchForm_input}\n          type=\"text\"\n          name=\"query\"\n          onChange={handleInputChange}\n          value={query}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Type your query\"\n        />\n        <button type=\"submit\" className={styles.SearchForm_button}>\n          <label className={styles.SearchForm_label}>Search</label>\n        </button>\n      </form>\n\n      {movies && movies.length > 0 && (\n        <>\n          <ul className={styles.movies__list}>\n            {movies.map(\n              ({ id, original_title }) =>\n                original_title && (\n                  <li key={id}>\n                    <Link to={`/movies/${id}`}>{original_title}</Link>\n                  </li>\n                )\n            )}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n}\n","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '03b99d578651e9a3ce5c6cc1a058aad2';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  console.log(response);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not Found'));\n}\n\nfunction getBySearchQuery(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n  );\n}\nfunction getTrending() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}trending/all/day?api_key=${API_KEY}`\n  );\n}\nfunction getMovieDetails(id) {\n  return fetchWithErrorHandling(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n}\nfunction getMovieCredits(id) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n}\nfunction getMovieReviews(id) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n}\n\nexport {\n  getBySearchQuery,\n  getTrending,\n  getMovieCredits,\n  getMovieDetails,\n  getMovieReviews,\n};\n"],"names":["MoviesView","useState","query","setQuery","movies","setMovies","useSearchParams","setSearchParams","search","useLocation","console","log","useEffect","getBySearchQuery","slice","then","response","results","className","styles","onSubmit","e","preventDefault","trim","toLowerCase","type","name","onChange","currentTarget","value","autoComplete","autoFocus","placeholder","length","map","id","original_title","to","BASE_URL","API_KEY","fetchWithErrorHandling","url","config","fetch","ok","json","Promise","reject","Error","getTrending","getMovieDetails","getMovieCredits","getMovieReviews"],"sourceRoot":""}