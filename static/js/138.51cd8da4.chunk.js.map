{"version":3,"file":"static/js/138.51cd8da4.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/views/MoviesDetailsView/MovieDetailsView.module.css?e056","components/views/MoviesDetailsView/MovieDetailsView.jsx","services/api-service.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MovieDetailsView_content__Ab6QV\",\"film__card\":\"MovieDetailsView_film__card__wKG6R\",\"film__title\":\"MovieDetailsView_film__title__oaX-8\",\"info__wrapper\":\"MovieDetailsView_info__wrapper__DzQWi\",\"image\":\"MovieDetailsView_image__K3pc6\",\"image__wrapper\":\"MovieDetailsView_image__wrapper__PkuOg\",\"params\":\"MovieDetailsView_params__+2FOJ\",\"param\":\"MovieDetailsView_param__MC18E\",\"param__title\":\"MovieDetailsView_param__title__bWmNf\",\"param__value\":\"MovieDetailsView_param__value__MAbJK\",\"param__value_votes\":\"MovieDetailsView_param__value_votes__+hru4\",\"back_btn\":\"MovieDetailsView_back_btn__xD8YI\"};","import { useState, useEffect, lazy, Suspense } from 'react';\nimport {\n  useParams,\n  useLocation,\n  useNavigate,\n  Link,\n  Routes,\n  Route,\n} from 'react-router-dom';\nimport { getMovieDetails } from '../../../services/api-service';\nimport styles from './MovieDetailsView.module.css';\nconst Cast = lazy(() => import('../Cast/Cast'));\nconst Review = lazy(() => import('../Reviews/Reviews'));\n\nexport default function MovieDetailsView() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const { pathname } = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    getMovieDetails(movieId).then(response => {\n      console.log(response);\n      setMovie(response);\n    });\n  }, [movieId]);\n  useEffect(() => console.log('useEffect'), []);\n  console.log(movie);\n\n  return (\n    movie && (\n      <div className={styles.content}>\n        <button\n          className={styles.back_btn}\n          onClick={() => {\n            const prevRoute = window.sessionStorage.getItem('prevRoute');\n            navigate(prevRoute ?? '/');\n          }}\n        >\n          &#8592; Go back\n        </button>\n        <div className={styles.film__card}>\n          <div className={styles.image__wrapper}>\n            <img\n              className={styles.image}\n              src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n              alt={movie.original_title}\n              height=\"531\"\n            />\n          </div>\n          <div className={styles.info__wrapper}>\n            <h2 className={styles.film__title}>{movie.original_title}</h2>\n            <ul className={styles.params}>\n              <li className={styles.param}>\n                <p className={styles.param__title}>Vote / Votes</p>\n\n                <p className={styles.param__value_votes}>\n                  {movie.vote_average}\n                </p>\n              </li>\n              <li className={styles.param}>\n                <p className={styles.param__title}>Popularity</p>\n                <p className={styles.param__value_votes}>\n                  {Math.round(movie.popularity)}\n                </p>\n              </li>\n              <li className={styles.param}>\n                <p className={styles.param__title}>Original Title</p>\n                <p className={styles.param__value}>{movie.original_title}</p>\n              </li>\n              <li className={styles.param}>\n                <p className={styles.param__title}>Genre</p>\n                <p className={styles.param__value}>\n                  {movie.genres.map(genre => genre.name).join(', ')}\n                </p>\n              </li>\n            </ul>\n            <span className={styles.film__owervier}>ABOUT</span>\n            <div className={styles.film__owervier}>\n              <p className={styles.film__owerviertext}>{movie.overview}</p>\n            </div>\n            <div>\n              <p className={styles.param__title}>Additional information:</p>\n              <ul>\n                <li className={styles.param}>\n                  <Link\n                    to={pathname.split('/').slice(0, 3).join('/') + '/cast'}\n                  >\n                    Cast\n                  </Link>\n                </li>\n                <li className={styles.param}>\n                  <Link\n                    to={pathname.split('/').slice(0, 3).join('/') + '/reviews'}\n                  >\n                    Reviews\n                  </Link>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n\n        <Suspense fallback={<>loading...</>}>\n          <Routes>\n            <Route path=\"cast\" element={<Cast />} />\n            <Route path=\"reviews\" element={<Review />} />\n          </Routes>\n        </Suspense>\n      </div>\n    )\n  );\n}\n","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '03b99d578651e9a3ce5c6cc1a058aad2';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  console.log(response);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not Found'));\n}\n\nfunction getBySearchQuery(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n  );\n}\nfunction getTrending() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}trending/all/day?api_key=${API_KEY}`\n  );\n}\nfunction getMovieDetails(id) {\n  return fetchWithErrorHandling(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n}\nfunction getMovieCredits(id) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n}\nfunction getMovieReviews(id) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n}\n\nexport {\n  getBySearchQuery,\n  getTrending,\n  getMovieCredits,\n  getMovieDetails,\n  getMovieReviews,\n};\n"],"names":["Cast","lazy","Review","MovieDetailsView","movieId","useParams","useState","movie","setMovie","pathname","useLocation","navigate","useNavigate","useEffect","getMovieDetails","then","response","console","log","className","styles","onClick","prevRoute","window","sessionStorage","getItem","src","poster_path","alt","original_title","height","vote_average","Math","round","popularity","genres","map","genre","name","join","overview","to","split","slice","Suspense","fallback","path","element","BASE_URL","API_KEY","fetchWithErrorHandling","url","config","fetch","ok","json","Promise","reject","Error","getBySearchQuery","query","getTrending","id","getMovieCredits","getMovieReviews"],"sourceRoot":""}